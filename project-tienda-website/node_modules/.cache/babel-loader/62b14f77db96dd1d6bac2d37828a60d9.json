{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harcr\\\\Documents\\\\Desarrollo-ciclo4\\\\Proyecto_React\\\\my-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Navbar } from \"./Components/Navbar\";\nimport { Navigation } from \"./Components/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [rol, setRol] = useState('admin');\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      rol: rol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      rol: rol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PgAOtcJzhAPeZhsbfLkr7wSYs3s=\");\n_c = App;\nexport default App;\n\n/*\r\n\r\nlet nombre = [];\r\nlet cantidad = [];\r\nlet precioUnitario = []; \r\nlet menu1;\r\nlet cliente;\r\nlet admin;\r\nlet opcion1;\r\nlet opcion2;\r\nlet counter = 0;\r\n\r\n\r\nmenu1 = \"Seleccione su rol\\n\\n\"+\r\n        \"1. Administrador\\n\"+\r\n        \"2. Cliente\\n\";\r\n\r\nadmin= \"(Admin)Ingrese la opción que desee realizar\\n\\n\"+\r\n\"1- Ingresar nuevo producto\\n\"+\r\n\"2- Visualizar Productos\\n\"+\r\n\"3- Visualizar ventas realizadas\\n\"+\r\n\"4- Salir\\n\";\r\n\r\ncliente = \"(Cliente)Ingrese la opción que desee realizar\\n\\n\"+\r\n        \"1- Visualizar productos y seleccionar\\n\"+\r\n        \"2- Ver carrito de compras\\n\"+\r\n        \"3- Salir\\n\";\r\n\r\n\r\nwhile(1){\r\n  opcion1 = parseInt(prompt(menu1));\r\n\r\nif((opcion1 <= 0) || (opcion1>2)) {alert(\"Opcion Inválida\");}  \r\nelse if (opcion1 === 1) {\r\n      do{                                                         //opciones para el administrador\r\n        opcion2 = parseInt(prompt(admin));\r\n      switch(opcion2){\r\n          case 1:\r\n            ingresarProducto();\r\n            counter++;\r\n              break;\r\n          case 2:\r\n            visualizarProductos();\r\n          break;\r\n          case 3:\r\n            alert(\"crear funcion para Visualizar ventas realizadas\");\r\n          break;\r\n          default:\r\n              break;\r\n        }   \r\n        }while(opcion2 <= 3);        \r\n} \r\n\r\nelse{\r\n  do{                                         //opciones para cliente\r\n    opcion2 = parseInt(prompt(cliente));\r\n  switch(opcion2){\r\n      case 1:\r\n        alert(\"crear funcion para Visualizar productos y seleccionar\");\r\n          break;\r\n      case 2:\r\n        alert(\"crear funcion para Ver carrito de compras\");\r\n      break;\r\n      default:\r\n          break;\r\n  }\r\n  }while(opcion2 <= 2);\r\n\r\n}\r\n\r\n}\r\n\r\n// DESARROLLO DE FUNCIONES PARA CADA OPCION:\r\n/*\r\nFuncion para crear productos nuevos, solo puede acceder administrador\r\n\r\nfunction ingresarProducto(){\r\n  nombre[counter] = prompt(\"Digite Producto\");\r\n  cantidad[counter] = prompt(\"Digite cantidad\");\r\n  precioUnitario[counter] = prompt(\"Digite Precio unitario\");\r\n  alert(\"Producto agregado satisfactoriamente !!\");\r\n}\r\n\r\n/*\r\n  Funcion para visualizar productos, solo accede administrador\r\n\r\n\r\n function visualizarProductos(){\r\n  let acumulador = \"\";\r\n  for (let index = 0; index < counter; index++) {\r\n    acumulador = acumulador + \"Producto : \"+nombre[index]+\"\\t\"+\"\\t\"+\r\n                              \"Cantidad : \"+cantidad[index]+\"\\t\"+\"\\t\"+\r\n                              \"Precio :\"   +precioUnitario[index]+\r\n                              \"\\n\";\r\n  }\r\n  alert(acumulador);\r\n\r\n\r\n}\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Navbar","Navigation","App","rol","setRol"],"sources":["C:/Users/harcr/Documents/Desarrollo-ciclo4/Proyecto_React/my-app/src/App.jsx"],"sourcesContent":["\r\nimport \"./bootstrap.min.css\";\r\nimport React, { useState } from \"react\";\r\nimport  { BrowserRouter } from \"react-router-dom\";\r\nimport { Navbar } from \"./Components/Navbar\";\r\nimport { Navigation } from \"./Components/Navigation\";\r\n\r\nconst App = () =>{\r\n\r\n  const [rol, setRol]= useState('admin')\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar rol ={rol}/>\r\n      <Navigation rol ={rol}/> \r\n    </BrowserRouter>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n/*\r\n\r\nlet nombre = [];\r\nlet cantidad = [];\r\nlet precioUnitario = []; \r\nlet menu1;\r\nlet cliente;\r\nlet admin;\r\nlet opcion1;\r\nlet opcion2;\r\nlet counter = 0;\r\n\r\n\r\nmenu1 = \"Seleccione su rol\\n\\n\"+\r\n        \"1. Administrador\\n\"+\r\n        \"2. Cliente\\n\";\r\n\r\nadmin= \"(Admin)Ingrese la opción que desee realizar\\n\\n\"+\r\n\"1- Ingresar nuevo producto\\n\"+\r\n\"2- Visualizar Productos\\n\"+\r\n\"3- Visualizar ventas realizadas\\n\"+\r\n\"4- Salir\\n\";\r\n\r\ncliente = \"(Cliente)Ingrese la opción que desee realizar\\n\\n\"+\r\n        \"1- Visualizar productos y seleccionar\\n\"+\r\n        \"2- Ver carrito de compras\\n\"+\r\n        \"3- Salir\\n\";\r\n\r\n\r\nwhile(1){\r\n  opcion1 = parseInt(prompt(menu1));\r\n\r\nif((opcion1 <= 0) || (opcion1>2)) {alert(\"Opcion Inválida\");}  \r\nelse if (opcion1 === 1) {\r\n      do{                                                         //opciones para el administrador\r\n        opcion2 = parseInt(prompt(admin));\r\n      switch(opcion2){\r\n          case 1:\r\n            ingresarProducto();\r\n            counter++;\r\n              break;\r\n          case 2:\r\n            visualizarProductos();\r\n          break;\r\n          case 3:\r\n            alert(\"crear funcion para Visualizar ventas realizadas\");\r\n          break;\r\n          default:\r\n              break;\r\n        }   \r\n        }while(opcion2 <= 3);        \r\n} \r\n\r\nelse{\r\n  do{                                         //opciones para cliente\r\n    opcion2 = parseInt(prompt(cliente));\r\n  switch(opcion2){\r\n      case 1:\r\n        alert(\"crear funcion para Visualizar productos y seleccionar\");\r\n          break;\r\n      case 2:\r\n        alert(\"crear funcion para Ver carrito de compras\");\r\n      break;\r\n      default:\r\n          break;\r\n  }\r\n  }while(opcion2 <= 2);\r\n\r\n}\r\n\r\n}\r\n\r\n// DESARROLLO DE FUNCIONES PARA CADA OPCION:\r\n/*\r\nFuncion para crear productos nuevos, solo puede acceder administrador\r\n\r\nfunction ingresarProducto(){\r\n  nombre[counter] = prompt(\"Digite Producto\");\r\n  cantidad[counter] = prompt(\"Digite cantidad\");\r\n  precioUnitario[counter] = prompt(\"Digite Precio unitario\");\r\n  alert(\"Producto agregado satisfactoriamente !!\");\r\n}\r\n\r\n/*\r\n  Funcion para visualizar productos, solo accede administrador\r\n\r\n\r\n function visualizarProductos(){\r\n  let acumulador = \"\";\r\n  for (let index = 0; index < counter; index++) {\r\n    acumulador = acumulador + \"Producto : \"+nombre[index]+\"\\t\"+\"\\t\"+\r\n                              \"Cantidad : \"+cantidad[index]+\"\\t\"+\"\\t\"+\r\n                              \"Precio :\"   +precioUnitario[index]+\r\n                              \"\\n\";\r\n  }\r\n  alert(acumulador);\r\n\r\n\r\n}\r\n\r\n*/ \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AACA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAUC,aAAa,QAAQ,kBAAkB;AACjD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,UAAU,QAAQ,yBAAyB;AAAC;AAErD,MAAMC,GAAG,GAAG,MAAK;EAAA;EAEf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAEN,QAAQ,CAAC,OAAO,CAAC;EACtC,oBACE,QAAC,aAAa;IAAA,wBACZ,QAAC,MAAM;MAAC,GAAG,EAAGK;IAAI;MAAA;MAAA;MAAA;IAAA,QAAE,eACpB,QAAC,UAAU;MAAC,GAAG,EAAGA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAGpB,CAAC;AAAC,GAVID,GAAG;AAAA,KAAHA,GAAG;AAYT,eAAeA,GAAG;;AAElpGA;AAAA"},"metadata":{},"sourceType":"module"}