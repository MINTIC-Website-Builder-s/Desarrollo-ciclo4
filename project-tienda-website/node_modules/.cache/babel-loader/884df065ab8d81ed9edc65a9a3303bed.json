{"ast":null,"code":"\n/*\r\n\r\nimport { createContext, useCallback, useMemo, useState } from \"react\";\r\nimport  PropTypes from \"prop-types\";\r\n\r\n// tiene un objeto con el cual vamos a rodear los objetos que queremos marcar \r\nexport const AuthContext = createContext();\r\n\r\nconst MY_AUTH_APP = 'MY_AUTH_APP_1';\r\n// api context permite saber si el usuario inicio seccion \r\nexport function AuthContextProvider({ children }) {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(window.localStorage.getItem('MY_AUTH_APP') ?? false\r\n    );\r\n\r\n    const login = useCallback(function () {\r\n\r\n        window.localStorage.setItem(MY_AUTH_APP, true);\r\n        setIsAuthenticated(true);\r\n\r\n    }, []);\r\n\r\n    const logout = useCallback(function () {\r\n\r\n        window.localStorage.removeItem(MY_AUTH_APP);\r\n        setIsAuthenticated(false);\r\n\r\n    }, []);\r\n\r\n    const value = useMemo(\r\n\r\n        () => ({\r\n            login,\r\n            logout,\r\n            isAuthenticated\r\n        }),\r\n        [login, logout, isAuthenticated]\r\n    );\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\nAuthContextProvider.PropTypes = {\r\n    children: PropTypes.object\r\n};\r\n\r\n\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/harcr/Documents/Desarrollo-ciclo4/Proyecto_React/my-app/src/Contexts/outContexts.js"],"sourcesContent":["\r\n/*\r\n\r\nimport { createContext, useCallback, useMemo, useState } from \"react\";\r\nimport  PropTypes from \"prop-types\";\r\n\r\n// tiene un objeto con el cual vamos a rodear los objetos que queremos marcar \r\nexport const AuthContext = createContext();\r\n\r\nconst MY_AUTH_APP = 'MY_AUTH_APP_1';\r\n// api context permite saber si el usuario inicio seccion \r\nexport function AuthContextProvider({ children }) {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(window.localStorage.getItem('MY_AUTH_APP') ?? false\r\n    );\r\n\r\n    const login = useCallback(function () {\r\n\r\n        window.localStorage.setItem(MY_AUTH_APP, true);\r\n        setIsAuthenticated(true);\r\n\r\n    }, []);\r\n\r\n    const logout = useCallback(function () {\r\n\r\n        window.localStorage.removeItem(MY_AUTH_APP);\r\n        setIsAuthenticated(false);\r\n\r\n    }, []);\r\n\r\n    const value = useMemo(\r\n\r\n        () => ({\r\n            login,\r\n            logout,\r\n            isAuthenticated\r\n        }),\r\n        [login, logout, isAuthenticated]\r\n    );\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\nAuthContextProvider.PropTypes = {\r\n    children: PropTypes.object\r\n};\r\n\r\n\r\n*/\r\n\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}