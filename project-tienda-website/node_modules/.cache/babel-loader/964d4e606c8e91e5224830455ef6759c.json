{"ast":null,"code":"let nombre = [];\nlet cantidad = [];\nlet precioUnitario = [];\nlet menu1;\nlet cliente;\nlet admin;\nlet opcion1;\nlet opcion2;\nlet counter = 0;\nmenu1 = \"Seleccione su rol\\n\\n\" + \"1. Administrador\\n\" + \"2. Cliente\\n\";\nadmin = \"(Admin)Ingrese la opción que desee realizar\\n\\n\" + \"1- Ingresar nuevo producto\\n\" + \"2- Visualizar Productos\\n\" + \"3- Visualizar ventas realizadas\\n\" + \"4- Salir\\n\";\ncliente = \"(Cliente)Ingrese la opción que desee realizar\\n\\n\" + \"1- Visualizar productos y seleccionar\\n\" + \"2- Ver carrito de compras\\n\" + \"3- Salir\\n\";\nwhile (1) {\n  opcion1 = parseInt(prompt(menu1));\n  if (opcion1 <= 0 || opcion1 > 2) {\n    alert(\"Opcion Inválida\");\n  } else if (opcion1 === 1) {\n    do {\n      //opciones para el administrador\n      opcion2 = parseInt(prompt(admin));\n      switch (opcion2) {\n        case 1:\n          ingresarProducto();\n          counter++;\n          break;\n        case 2:\n          visualizarProductos();\n          break;\n        case 3:\n          alert(\"crear funcion para Visualizar ventas realizadas\");\n          break;\n        default:\n          break;\n      }\n    } while (opcion2 <= 3);\n  } else {\n    do {\n      //opciones para cliente\n      opcion2 = parseInt(prompt(cliente));\n      switch (opcion2) {\n        case 1:\n          alert(\"crear funcion para Visualizar productos y seleccionar\");\n          break;\n        case 2:\n          alert(\"crear funcion para Ver carrito de compras\");\n          break;\n        default:\n          break;\n      }\n    } while (opcion2 <= 2);\n  }\n}\n\n// DESARROLLO DE FUNCIONES PARA CADA OPCION:\n/*\r\nFuncion para crear productos nuevos, solo puede acceder administrador\r\n*/\nfunction ingresarProducto() {\n  nombre[counter] = prompt(\"Digite Producto\");\n  cantidad[counter] = prompt(\"Digite cantidad\");\n  precioUnitario[counter] = prompt(\"Digite Precio unitario\");\n  alert(\"Producto agregado satisfactoriamente !!\");\n}\n\n/*\r\n  Funcion para visualizar productos, solo accede administrador\r\n*/\n\nfunction visualizarProductos() {\n  let acumulador = \"\";\n  for (let index = 0; index < counter; index++) {\n    acumulador = acumulador + \"Producto : \" + nombre[index] + \"\\t\" + \"\\t\" + \"Cantidad : \" + cantidad[index] + \"\\t\" + \"\\t\" + \"Precio :\" + precioUnitario[index] + \"\\n\";\n  }\n  alert(acumulador);\n}","map":{"version":3,"names":["nombre","cantidad","precioUnitario","menu1","cliente","admin","opcion1","opcion2","counter","parseInt","prompt","alert","ingresarProducto","visualizarProductos","acumulador","index"],"sources":["C:/Users/harcr/Documents/Desarrollo-ciclo4/Proyecto_React/my-app/src/App.js"],"sourcesContent":["let nombre = [];\r\nlet cantidad = [];\r\nlet precioUnitario = []; \r\nlet menu1;\r\nlet cliente;\r\nlet admin;\r\nlet opcion1;\r\nlet opcion2;\r\nlet counter = 0;\r\n\r\n\r\nmenu1 = \"Seleccione su rol\\n\\n\"+\r\n        \"1. Administrador\\n\"+\r\n        \"2. Cliente\\n\";\r\n\r\nadmin= \"(Admin)Ingrese la opción que desee realizar\\n\\n\"+\r\n\"1- Ingresar nuevo producto\\n\"+\r\n\"2- Visualizar Productos\\n\"+\r\n\"3- Visualizar ventas realizadas\\n\"+\r\n\"4- Salir\\n\";\r\n\r\ncliente = \"(Cliente)Ingrese la opción que desee realizar\\n\\n\"+\r\n        \"1- Visualizar productos y seleccionar\\n\"+\r\n        \"2- Ver carrito de compras\\n\"+\r\n        \"3- Salir\\n\";\r\n\r\n\r\nwhile(1){\r\n  opcion1 = parseInt(prompt(menu1));\r\n\r\nif((opcion1 <= 0) || (opcion1>2)) {alert(\"Opcion Inválida\");}  \r\nelse if (opcion1 === 1) {\r\n      do{                                                         //opciones para el administrador\r\n        opcion2 = parseInt(prompt(admin));\r\n      switch(opcion2){\r\n          case 1:\r\n            ingresarProducto();\r\n            counter++;\r\n              break;\r\n          case 2:\r\n            visualizarProductos();\r\n          break;\r\n          case 3:\r\n            alert(\"crear funcion para Visualizar ventas realizadas\");\r\n          break;\r\n          default:\r\n              break;\r\n        }   \r\n        }while(opcion2 <= 3);        \r\n} \r\n\r\nelse{\r\n  do{                                         //opciones para cliente\r\n    opcion2 = parseInt(prompt(cliente));\r\n  switch(opcion2){\r\n      case 1:\r\n        alert(\"crear funcion para Visualizar productos y seleccionar\");\r\n          break;\r\n      case 2:\r\n        alert(\"crear funcion para Ver carrito de compras\");\r\n      break;\r\n      default:\r\n          break;\r\n  }\r\n  }while(opcion2 <= 2);\r\n\r\n}\r\n\r\n}\r\n\r\n// DESARROLLO DE FUNCIONES PARA CADA OPCION:\r\n/*\r\nFuncion para crear productos nuevos, solo puede acceder administrador\r\n*/ \r\nfunction ingresarProducto(){\r\n  nombre[counter] = prompt(\"Digite Producto\");\r\n  cantidad[counter] = prompt(\"Digite cantidad\");\r\n  precioUnitario[counter] = prompt(\"Digite Precio unitario\");\r\n  alert(\"Producto agregado satisfactoriamente !!\");\r\n}\r\n\r\n/*\r\n  Funcion para visualizar productos, solo accede administrador\r\n*/ \r\n\r\n function visualizarProductos(){\r\n  let acumulador = \"\";\r\n  for (let index = 0; index < counter; index++) {\r\n    acumulador = acumulador + \"Producto : \"+nombre[index]+\"\\t\"+\"\\t\"+\r\n                              \"Cantidad : \"+cantidad[index]+\"\\t\"+\"\\t\"+\r\n                              \"Precio :\"   +precioUnitario[index]+\r\n                              \"\\n\";\r\n  }\r\n  alert(acumulador);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAE;AACf,IAAIC,QAAQ,GAAG,EAAE;AACjB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,KAAK;AACT,IAAIC,OAAO;AACX,IAAIC,KAAK;AACT,IAAIC,OAAO;AACX,IAAIC,OAAO;AACX,IAAIC,OAAO,GAAG,CAAC;AAGfL,KAAK,GAAG,uBAAuB,GACvB,oBAAoB,GACpB,cAAc;AAEtBE,KAAK,GAAE,iDAAiD,GACxD,8BAA8B,GAC9B,2BAA2B,GAC3B,mCAAmC,GACnC,YAAY;AAEZD,OAAO,GAAG,mDAAmD,GACrD,yCAAyC,GACzC,6BAA6B,GAC7B,YAAY;AAGpB,OAAM,CAAC,EAAC;EACNE,OAAO,GAAGG,QAAQ,CAACC,MAAM,CAACP,KAAK,CAAC,CAAC;EAEnC,IAAIG,OAAO,IAAI,CAAC,IAAMA,OAAO,GAAC,CAAE,EAAE;IAACK,KAAK,CAAC,iBAAiB,CAAC;EAAC,CAAC,MACxD,IAAIL,OAAO,KAAK,CAAC,EAAE;IAClB,GAAE;MAA0D;MAC1DC,OAAO,GAAGE,QAAQ,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC;MACnC,QAAOE,OAAO;QACV,KAAK,CAAC;UACJK,gBAAgB,EAAE;UAClBJ,OAAO,EAAE;UACP;QACJ,KAAK,CAAC;UACJK,mBAAmB,EAAE;UACvB;QACA,KAAK,CAAC;UACJF,KAAK,CAAC,iDAAiD,CAAC;UAC1D;QACA;UACI;MAAM;IAEZ,CAAC,QAAMJ,OAAO,IAAI,CAAC;EAC3B,CAAC,MAEG;IACF,GAAE;MAA0C;MAC1CA,OAAO,GAAGE,QAAQ,CAACC,MAAM,CAACN,OAAO,CAAC,CAAC;MACrC,QAAOG,OAAO;QACV,KAAK,CAAC;UACJI,KAAK,CAAC,uDAAuD,CAAC;UAC5D;QACJ,KAAK,CAAC;UACJA,KAAK,CAAC,2CAA2C,CAAC;UACpD;QACA;UACI;MAAM;IAEd,CAAC,QAAMJ,OAAO,IAAI,CAAC;EAErB;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAASK,gBAAgB,GAAE;EACzBZ,MAAM,CAACQ,OAAO,CAAC,GAAGE,MAAM,CAAC,iBAAiB,CAAC;EAC3CT,QAAQ,CAACO,OAAO,CAAC,GAAGE,MAAM,CAAC,iBAAiB,CAAC;EAC7CR,cAAc,CAACM,OAAO,CAAC,GAAGE,MAAM,CAAC,wBAAwB,CAAC;EAC1DC,KAAK,CAAC,yCAAyC,CAAC;AAClD;;AAEA;AACA;AACA;;AAEC,SAASE,mBAAmB,GAAE;EAC7B,IAAIC,UAAU,GAAG,EAAE;EACnB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,OAAO,EAAEO,KAAK,EAAE,EAAE;IAC5CD,UAAU,GAAGA,UAAU,GAAG,aAAa,GAACd,MAAM,CAACe,KAAK,CAAC,GAAC,IAAI,GAAC,IAAI,GACrC,aAAa,GAACd,QAAQ,CAACc,KAAK,CAAC,GAAC,IAAI,GAAC,IAAI,GACvC,UAAU,GAAIb,cAAc,CAACa,KAAK,CAAC,GACnC,IAAI;EAChC;EACAJ,KAAK,CAACG,UAAU,CAAC;AACnB"},"metadata":{},"sourceType":"module"}